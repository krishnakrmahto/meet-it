{"version":3,"sources":["constants.js","content.js"],"names":["MUTE","UNMUTE","MUTED","UNMUTED","MEET_MESSAGE_WHEN_MUTE_IS_ON","MEET_MESSAGE_WHEN_MUTE_IS_OFF","chrome","runtime","onMessage","addListener","message","sender","sendResponse","requestedMuteState","muteState","setMuteState","sendMessage","mutingMessage","console","log","searchString","microphoneToggleButton","document","querySelectorAll","filter","item","getAttribute","toString","includes","click"],"mappings":";AAKO,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,8BAAA,QAAA,6BAAA,QAAA,QAAA,QAAA,MAAA,QAAA,OAAA,QAAA,UAAA,EALA,IAAMA,EAAO,OAKb,QAAA,KAAA,EAJA,IAAMC,EAAS,SAIf,QAAA,OAAA,EAHA,IAAMC,EAAQ,QAGd,QAAA,MAAA,EAFA,IAAMC,EAAU,UAEhB,QAAA,QAAA,EADA,IAAMC,EAA+B,qBACrC,QAAA,6BAAA,EAAA,IAAMC,EAAgC,sBAAtC,QAAA,8BAAA;;ACYP,aAjBA,IAAA,EAAA,QAAA,eAiBA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,WAAA,MAAA,EAAA,cAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAfAC,OAAOC,QAAQC,UAAUC,YAAY,SAACC,EAASC,EAAQC,GACjDC,IAAAA,EAAqBH,EAAQI,UAE7BD,GAAsBA,IAAuBb,EAAjD,MACEe,EAAaV,EAAD,+BACZC,OAAOC,QAAQS,YAAY,CAAEC,cAAef,EAAAA,QAC5CgB,QAAQC,IAAI,wBAAyBjB,EAArC,QAEOW,GAAsBA,IAAuBZ,EAAjD,SACHc,EAAaX,EAAD,8BACZE,OAAOC,QAAQS,YAAY,CAAEC,cAAed,EAAAA,UAC5Ce,QAAQC,IAAI,wBAAyBhB,EAArC,YAIJ,IAAMY,EAAe,SAACK,GACpBF,QAAQC,IAAI,qCAAsCC,GAC9CC,IAAAA,EAAyB,EAAIC,SAASC,iBAAiB,mBAAmBC,OAAO,SAACC,GACpFA,OAAAA,EAAKC,aAAa,cAAcC,WAAWC,SAASR,KAAe,GACjEC,IACFA,EAAuBQ,QACvBX,QAAQC,IAAI","file":"content.js","sourceRoot":"../../src","sourcesContent":["export const MUTE = \"mute\";\nexport const UNMUTE = \"unmute\";\nexport const MUTED = \"muted\";\nexport const UNMUTED = \"unmuted\";\nexport const MEET_MESSAGE_WHEN_MUTE_IS_ON = \"Turn on microphone\";\nexport const MEET_MESSAGE_WHEN_MUTE_IS_OFF = \"Turn off microphone\";","import { MEET_MESSAGE_WHEN_MUTE_IS_OFF, MEET_MESSAGE_WHEN_MUTE_IS_ON, MUTE, UNMUTE, MUTED, UNMUTED } from \"./constants\"\n\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n  let requestedMuteState = message.muteState;\n\n  if (requestedMuteState && requestedMuteState === MUTE) {\n    setMuteState(MEET_MESSAGE_WHEN_MUTE_IS_OFF);\n    chrome.runtime.sendMessage({ mutingMessage: MUTED });\n    console.log(\"Runtime message sent:\", MUTED);\n  }\n  else if (requestedMuteState && requestedMuteState === UNMUTE) {\n    setMuteState(MEET_MESSAGE_WHEN_MUTE_IS_ON);\n    chrome.runtime.sendMessage({ mutingMessage: UNMUTED });\n    console.log(\"Runtime message sent:\", UNMUTED);\n  }\n});\n\nconst setMuteState = (searchString) => {\n  console.log(\"Search string for muting/unmuting:\", searchString);\n  let microphoneToggleButton = [...document.querySelectorAll(\"[data-tooltip]\")].filter((item) =>\n    item.getAttribute(\"aria-label\").toString().includes(searchString))[0];\n  if (microphoneToggleButton) {\n    microphoneToggleButton.click();\n    console.log(\"Clicked microphone toggle button\");\n  }\n}\n"]}