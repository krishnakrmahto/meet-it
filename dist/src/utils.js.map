{"version":3,"sources":["constants.js","utils.js"],"names":["MUTE","UNMUTE","ongoingMeetRegex","isLiveGoogleMeetTab","tab","url","match","switchToMeetTab","getMeetTab","console","log","chrome","tabs","update","id","selected","active","windows","windowId","drawAttention","focused","setMeetMuteState","muteState","meetTab","setMuteState","changeFavicon","microphoneCurrentState","document","querySelector","href","muted","isCurrentlyMuted","mutedInfo","Promise","resolve","reject","query","forEach","index","err","updateContextMenuTitle","contextMenuId","newTitle","contextMenus","title"],"mappings":"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","file":"utils.js","sourceRoot":"../../src","sourcesContent":["export const MUTE = \"mute\";\nexport const UNMUTE = \"unmute\";","import { MUTE, UNMUTE } from \"./constants\";\n\nconst ongoingMeetRegex = /meet.google.com\\/[a-zA-Z]{3}\\-[a-zA-Z]{4}\\-[a-zA-Z]{3}.*/gm;\n\nconst isLiveGoogleMeetTab = (tab) => {\n    return tab.url.match(ongoingMeetRegex);\n};\n\nconst switchToMeetTab = async () => {\n    try {\n        let tab = await getMeetTab();\n        console.log(\"Got meet tab:\", tab);\n        if (tab != null) {\n            console.log(\"Updating tab to meet:\", tab);\n            chrome.tabs.update(tab.id, { selected: true, active: true });\n            chrome.windows.update(tab.windowId, { drawAttention: true, focused: true });\n        }\n    } catch (err) {\n        console.log(\"Error while getting meet tab\");\n    }\n};\n\nconst setMeetMuteState = (muteState) => {\n    let meetTab = getMeetTab();\n    setMuteState(meetTab, muteState);\n};\n\nconst changeFavicon = (microphoneCurrentState) => {\n    document.querySelector('link[rel*=\"icon\"]').href = \"icon/\" + microphoneCurrentState + \".png\";\n};\n\nconst setMuteState = async (tab, muteState) => {\n    console.log(\"Requested mute state:\", muteState);\n    if (muteState === MUTE) {\n        await chrome.tabs.update(tab.id, { muted: true });\n    }\n    else if (muteState === UNMUTE) {\n        await chrome.tabs.update(tab.id, { muted: false });\n    }\n};\n\nconst isCurrentlyMuted = (tab) => {\n    return tab.mutedInfo.muted;\n};\n\nconst getMeetTab = () => {\n    return new Promise((resolve, reject) => {\n        try {\n            chrome.tabs.query({}, (tabs) => {\n                tabs.forEach((tab, index) => {\n                    if (isLiveGoogleMeetTab(tab)) {\n                        console.log(\"Found live Google Meet tab:\", tab);\n                        return tab;\n                    }\n                });\n            });\n        } catch (err) {\n            reject(err);\n        }\n    })\n};\n\nconst updateContextMenuTitle = (contextMenuId, newTitle) => {\n    chrome.contextMenus.update(contextMenuId, {\n        title: newTitle\n    });\n};\n\nexport { isLiveGoogleMeetTab, switchToMeetTab, changeFavicon, setMeetMuteState, updateContextMenuTitle, isCurrentlyMuted };"]}