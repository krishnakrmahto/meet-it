{"version":3,"sources":["constants.js","utils.js"],"names":["MUTE","UNMUTE","MEET_MESSAGE_WHEN_MUTE_IS_ON","MEET_MESSAGE_WHEN_MUTE_IS_OFF","ongoingMeetRegex","isLiveGoogleMeetTab","tab","url","match","switchToMeetTab","getMeetTab","console","log","chrome","tabs","update","id","selected","active","windows","windowId","drawAttention","focused","setMeetMuteState","muteState","meetTab","sendMessage","changeFavicon","microphoneCurrentState","document","querySelector","href","setMuteState","muted","isCurrentlyMuted","mutedInfo","Promise","resolve","reject","query","forEach","index","err","updateContextMenuTitle","contextMenuId","newTitle","contextMenus","title"],"mappings":";AAGO,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,8BAAA,QAAA,6BAAA,QAAA,OAAA,QAAA,UAAA,EAHA,IAAMA,EAAO,OAGb,QAAA,KAAA,EAFA,IAAMC,EAAS,SAEf,QAAA,OAAA,EADA,IAAMC,EAA+B,qBACrC,QAAA,6BAAA,EAAA,IAAMC,EAAgC,sBAAtC,QAAA,8BAAA;;AC6DP,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,iBAAA,QAAA,uBAAA,QAAA,iBAAA,QAAA,cAAA,QAAA,gBAAA,QAAA,yBAAA,EAhEA,IAAA,EAAA,QAAA,eAgEA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,MAAA,MAAA,GAAA,YAAA,EAAA,GAAA,EAAA,KAAA,EAAA,GAAA,QAAA,QAAA,GAAA,KAAA,EAAA,GAAA,SAAA,EAAA,GAAA,OAAA,WAAA,IAAA,EAAA,KAAA,EAAA,UAAA,OAAA,IAAA,QAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,MAAA,EAAA,GAAA,SAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,GAAA,SAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,QAAA,GAAA,OAAA,MA9DA,IAAMC,EAAmB,6DAEnBC,EAAsB,SAACC,GAClBA,OAAAA,EAAIC,IAAIC,MAAMJ,IA2DzB,QAAA,oBAAA,EAxDA,IAAMK,EAAe,WAAG,IAAA,EAAA,EAAA,mBAAA,KAAA,SAAA,IAAA,IAAA,EAAA,OAAA,mBAAA,KAAA,SAAA,GAAA,OAAA,OAAA,EAAA,KAAA,EAAA,MAAA,KAAA,EAEAC,OAFA,EAAA,KAAA,EAAA,EAAA,KAAA,EAEAA,IAFA,KAAA,EAEZJ,EAFY,EAAA,KAGhBK,QAAQC,IAAI,gBAAiBN,GAClB,MAAPA,IACAK,QAAQC,IAAI,wBAAyBN,GACrCO,OAAOC,KAAKC,OAAOT,EAAIU,GAAI,CAAEC,UAAU,EAAMC,QAAQ,IACrDL,OAAOM,QAAQJ,OAAOT,EAAIc,SAAU,CAAEC,eAAe,EAAMC,SAAS,KAPxD,EAAA,KAAA,GAAA,MAAA,KAAA,EAAA,EAAA,KAAA,EAAA,EAAA,GAAA,EAAA,MAAA,GAUhBX,QAAQC,IAAI,gCAVI,KAAA,GAAA,IAAA,MAAA,OAAA,EAAA,SAAA,EAAA,KAAA,CAAA,CAAA,EAAA,QAAlBH,OAAAA,WAAe,OAAA,EAAA,MAAA,KAAA,YAAA,GAwDrB,QAAA,gBAAA,EA1CA,IAAMc,EAAgB,WAAG,IAAA,EAAA,EAAA,mBAAA,KAAA,SAAOC,EAAAA,GAAP,IAAA,EAAA,OAAA,mBAAA,KAAA,SAAA,GAAA,OAAA,OAAA,EAAA,KAAA,EAAA,MAAA,KAAA,EACDd,OADC,EAAA,KAAA,EACDA,IADC,KAAA,EACjBe,EADiB,EAAA,KAGrBd,QAAQC,IAAI,0BAA2Ba,EAAS,kBAAmBD,GACnEX,OAAOC,KAAKY,YAAYD,EAAQT,GAAI,CAAEQ,UAAAA,IAJjB,KAAA,EAAA,IAAA,MAAA,OAAA,EAAA,SAAA,MAAnBD,OAAAA,SAAgB,GAAA,OAAA,EAAA,MAAA,KAAA,YAAA,GA0CtB,QAAA,iBAAA,EAnCA,IAAMI,EAAgB,SAACC,GACnBC,SAASC,cAAc,qBAAqBC,KAAO,QAAUH,EAAyB,QAkC1F,QAAA,cAAA,EA/BA,IAAMI,EAAY,WAAG,IAAA,EAAA,EAAA,mBAAA,KAAA,SAAO1B,EAAAA,EAAKkB,GAAZ,OAAA,mBAAA,KAAA,SAAA,GAAA,OAAA,OAAA,EAAA,KAAA,EAAA,MAAA,KAAA,EAEbA,GADJb,QAAQC,IAAI,wBAAyBY,GACjCA,IAAcxB,EAFD,KAAA,CAAA,EAAA,KAAA,EAAA,MAGPa,OAHO,EAAA,KAAA,EAGPA,OAAOC,KAAKC,OAAOT,EAAIU,GAAI,CAAEiB,OAAO,IAH7B,KAAA,EAAA,EAAA,KAAA,EAAA,MAAA,KAAA,EAKRT,GAAAA,IAAcvB,EALN,OAAA,CAAA,EAAA,KAAA,EAAA,MAMPY,OANO,EAAA,KAAA,EAMPA,OAAOC,KAAKC,OAAOT,EAAIU,GAAI,CAAEiB,OAAO,IAN7B,KAAA,EAAA,IAAA,MAAA,OAAA,EAAA,SAAA,MAAfD,OAAAA,SAAY,EAAA,GAAA,OAAA,EAAA,MAAA,KAAA,YAAA,GAUZE,EAAmB,SAAC5B,GACfA,OAAAA,EAAI6B,UAAUF,OAoBzB,QAAA,iBAAA,EAjBA,IAAMvB,EAAa,WACR,OAAA,IAAI0B,QAAQ,SAACC,EAASC,GACrB,IACAzB,OAAOC,KAAKyB,MAAM,GAAI,SAACzB,GACnBA,EAAK0B,QAAQ,SAAClC,EAAKmC,GACXpC,GAAAA,EAAoBC,GAEb+B,OADP1B,QAAQC,IAAI,8BAA+BN,GACpC+B,EAAQ/B,OAI7B,MAAOoC,GACLJ,EAAOI,OAKbC,EAAyB,SAACC,EAAeC,GAC3ChC,OAAOiC,aAAa/B,OAAO6B,EAAe,CACtCG,MAAOF,KAFf,QAAA,uBAAA","file":"utils.js","sourceRoot":"../../src","sourcesContent":["export const MUTE = \"mute\";\nexport const UNMUTE = \"unmute\";\nexport const MEET_MESSAGE_WHEN_MUTE_IS_ON = \"Turn on microphone\";\nexport const MEET_MESSAGE_WHEN_MUTE_IS_OFF = \"Turn off microphone\";","import { MUTE, UNMUTE } from \"./constants\";\n\nconst ongoingMeetRegex = /meet.google.com\\/[a-zA-Z]{3}\\-[a-zA-Z]{4}\\-[a-zA-Z]{3}.*/gm;\n\nconst isLiveGoogleMeetTab = (tab) => {\n    return tab.url.match(ongoingMeetRegex);\n};\n\nconst switchToMeetTab = async () => {\n    try {\n        let tab = await getMeetTab();\n        console.log(\"Got meet tab:\", tab);\n        if (tab != null) {\n            console.log(\"Updating tab to meet:\", tab);\n            chrome.tabs.update(tab.id, { selected: true, active: true });\n            chrome.windows.update(tab.windowId, { drawAttention: true, focused: true });\n        }\n    } catch (err) {\n        console.log(\"Error while getting meet tab\");\n    }\n};\n\nconst setMeetMuteState = async (muteState) => {\n    let meetTab = await getMeetTab();\n    // setMuteState(meetTab, muteState);\n    console.log(\"Sending message to tab:\", meetTab, \"with muteState:\", muteState);\n    chrome.tabs.sendMessage(meetTab.id, { muteState });\n};\n\nconst changeFavicon = (microphoneCurrentState) => {\n    document.querySelector('link[rel*=\"icon\"]').href = \"icon/\" + microphoneCurrentState + \".png\";\n};\n\nconst setMuteState = async (tab, muteState) => {\n    console.log(\"Requested mute state:\", muteState);\n    if (muteState === MUTE) {\n        await chrome.tabs.update(tab.id, { muted: true });\n    }\n    else if (muteState === UNMUTE) {\n        await chrome.tabs.update(tab.id, { muted: false });\n    }\n};\n\nconst isCurrentlyMuted = (tab) => {\n    return tab.mutedInfo.muted;\n};\n\nconst getMeetTab = () => {\n    return new Promise((resolve, reject) => {\n        try {\n            chrome.tabs.query({}, (tabs) => {\n                tabs.forEach((tab, index) => {\n                    if (isLiveGoogleMeetTab(tab)) {\n                        console.log(\"Found live Google Meet tab:\", tab);\n                        return resolve(tab);\n                    }\n                });\n            });\n        } catch (err) {\n            reject(err);\n        }\n    })\n};\n\nconst updateContextMenuTitle = (contextMenuId, newTitle) => {\n    chrome.contextMenus.update(contextMenuId, {\n        title: newTitle\n    });\n};\n\nexport { isLiveGoogleMeetTab, switchToMeetTab, changeFavicon, setMeetMuteState, updateContextMenuTitle, isCurrentlyMuted };"]}